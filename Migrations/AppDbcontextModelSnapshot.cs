// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using agoravai.Models;

namespace agoravai.Migrations
{
    [DbContext(typeof(AppDbcontext))]
    partial class AppDbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("agoravai.Models.Category", b =>
                {
                    b.Property<long>("CategoryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CategoryID");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar (15)");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("image");

                    b.HasKey("CategoryId");

                    b.HasIndex(new[] { "CategoryName" }, "CategoryName");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("agoravai.Models.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("nchar (5)")
                        .HasColumnName("CustomerID");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar (60)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar (15)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar (40)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar (30)");

                    b.Property<string>("ContactTitle")
                        .HasColumnType("nvarchar (30)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar (15)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar (24)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar (24)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar (10)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar (15)");

                    b.HasKey("CustomerId");

                    b.HasIndex(new[] { "City" }, "City");

                    b.HasIndex(new[] { "CompanyName" }, "CompanyNameCustomers");

                    b.HasIndex(new[] { "PostalCode" }, "PostalCodeCustomers");

                    b.HasIndex(new[] { "Region" }, "Region");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("agoravai.Models.Employee", b =>
                {
                    b.Property<long>("EmployeeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EmployeeID");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar (60)");

                    b.Property<byte[]>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar (15)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar (15)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar (4)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar (10)");

                    b.Property<byte[]>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HomePhone")
                        .HasColumnType("nvarchar (24)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar (20)");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar (255)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar (10)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar (15)");

                    b.Property<long?>("ReportsTo")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar (30)");

                    b.Property<string>("TitleOfCourtesy")
                        .HasColumnType("nvarchar (25)");

                    b.HasKey("EmployeeId");

                    b.HasIndex(new[] { "LastName" }, "LastName");

                    b.HasIndex(new[] { "PostalCode" }, "PostalCodeEmployees");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("agoravai.Models.EmployeeTerritory", b =>
                {
                    b.Property<long>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<string>("TerritoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasColumnName("TerritoryID");

                    b.ToTable("EmployeeTerritories");
                });

            modelBuilder.Entity("agoravai.Models.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("OrderID");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nchar (5)")
                        .HasColumnName("CustomerID");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<byte[]>("Freight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("0");

                    b.Property<byte[]>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RequiredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ShipAddress")
                        .HasColumnType("nvarchar (60)");

                    b.Property<string>("ShipCity")
                        .HasColumnType("nvarchar (15)");

                    b.Property<string>("ShipCountry")
                        .HasColumnType("nvarchar (15)");

                    b.Property<string>("ShipName")
                        .HasColumnType("nvarchar (40)");

                    b.Property<string>("ShipPostalCode")
                        .HasColumnType("nvarchar (10)");

                    b.Property<string>("ShipRegion")
                        .HasColumnType("nvarchar (15)");

                    b.Property<long?>("ShipVia")
                        .HasColumnType("int");

                    b.Property<byte[]>("ShippedDate")
                        .HasColumnType("datetime");

                    b.HasKey("OrderId");

                    b.HasIndex(new[] { "CustomerId" }, "CustomerID");

                    b.HasIndex(new[] { "CustomerId" }, "CustomersOrders");

                    b.HasIndex(new[] { "EmployeeId" }, "EmployeeID");

                    b.HasIndex(new[] { "EmployeeId" }, "EmployeesOrders");

                    b.HasIndex(new[] { "OrderDate" }, "OrderDate");

                    b.HasIndex(new[] { "ShipPostalCode" }, "ShipPostalCode");

                    b.HasIndex(new[] { "ShippedDate" }, "ShippedDate");

                    b.HasIndex(new[] { "ShipVia" }, "ShippersOrders");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("agoravai.Models.OrderDetail", b =>
                {
                    b.Property<long>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<long>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<double>("Discount")
                        .HasColumnType("real");

                    b.Property<long>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("1");

                    b.Property<byte[]>("UnitPrice")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("0");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex(new[] { "OrderId" }, "OrderID");

                    b.HasIndex(new[] { "OrderId" }, "OrdersOrder_Details");

                    b.HasIndex(new[] { "ProductId" }, "ProductID");

                    b.HasIndex(new[] { "ProductId" }, "ProductsOrder_Details");

                    b.ToTable("Order Details");
                });

            modelBuilder.Entity("agoravai.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ProductID");

                    b.Property<long?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<byte[]>("Discontinued")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar (40)");

                    b.Property<string>("QuantityPerUnit")
                        .HasColumnType("nvarchar (20)");

                    b.Property<long?>("ReorderLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.Property<byte[]>("UnitPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("UnitsInStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("UnitsOnOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.HasKey("ProductId");

                    b.HasIndex(new[] { "CategoryId" }, "CategoriesProducts");

                    b.HasIndex(new[] { "CategoryId" }, "CategoryID");

                    b.HasIndex(new[] { "ProductName" }, "ProductName");

                    b.HasIndex(new[] { "SupplierId" }, "SupplierID");

                    b.HasIndex(new[] { "SupplierId" }, "SuppliersProducts");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("agoravai.Models.Shipper", b =>
                {
                    b.Property<long>("ShipperId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ShipperID");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar (40)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar (24)");

                    b.HasKey("ShipperId");

                    b.ToTable("Shippers");
                });

            modelBuilder.Entity("agoravai.Models.Supplier", b =>
                {
                    b.Property<long>("SupplierId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SupplierID");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar (60)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar (15)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar (40)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar (30)");

                    b.Property<string>("ContactTitle")
                        .HasColumnType("nvarchar (30)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar (15)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar (24)");

                    b.Property<string>("HomePage")
                        .HasColumnType("ntext");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar (24)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar (10)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar (15)");

                    b.HasKey("SupplierId");

                    b.HasIndex(new[] { "CompanyName" }, "CompanyNameSuppliers");

                    b.HasIndex(new[] { "PostalCode" }, "PostalCodeSuppliers");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("agoravai.Models.Territory", b =>
                {
                    b.Property<long>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("RegionID");

                    b.Property<string>("TerritoryDescription")
                        .IsRequired()
                        .HasColumnType("nchar");

                    b.Property<string>("TerritoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasColumnName("TerritoryID");

                    b.ToTable("Territories");
                });

            modelBuilder.Entity("agoravai.Models.Order", b =>
                {
                    b.HasOne("agoravai.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.HasOne("agoravai.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("agoravai.Models.Shipper", "ShipViaNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("ShipVia");

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("ShipViaNavigation");
                });

            modelBuilder.Entity("agoravai.Models.OrderDetail", b =>
                {
                    b.HasOne("agoravai.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired();

                    b.HasOne("agoravai.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("agoravai.Models.Product", b =>
                {
                    b.HasOne("agoravai.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("agoravai.Models.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId");

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("agoravai.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("agoravai.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("agoravai.Models.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("agoravai.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("agoravai.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("agoravai.Models.Shipper", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("agoravai.Models.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
